{"version":3,"sources":["containers/home/styles.js","containers/home/index.js","App.js","reportWebVitals.js","index.js"],"names":["color","Header","styled","div","Container","ButtonGrouper","Button","button","primary","FormField","Home","url","localStorage","getItem","useState","inputValue","setInputValue","playing","width","height","controls","onChange","e","target","value","type","placeholder","name","onClick","removeItem","window","location","reload","icon","faRedoAlt","setItem","faCheck","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEMA,EACG,UADHA,EAEG,OAGIC,EAASC,IAAOC,IAAV,oNAIKH,EACXA,GAQAI,EAAYF,IAAOC,IAAV,gIASTE,EAAgBH,IAAOC,IAAV,iHASbG,EAASJ,IAAOK,OAAV,kLACH,qBAAGC,QAAwBR,EAAcA,KAC9C,qBAAGQ,QAAwBR,EAAcA,KAQvCS,EAAYP,IAAOC,IAAV,uSAQSH,G,wCCThBU,MAvCf,WACE,IAAMC,EAAMC,aAAaC,QAAQ,QAAU,yCAD5B,EAEqBC,mBAASH,GAF9B,mBAERI,EAFQ,KAEIC,EAFJ,KAoBf,OACE,qCACE,cAAC,EAAD,UACE,8CAEF,eAAC,EAAD,WACE,cAAC,IAAD,CAAaL,IAAKA,EAAKM,SAAS,EAAOC,MAAM,OAAOC,OAAO,OAAOC,UAAQ,IAC1E,cAAC,EAAD,UACE,uBAAOC,SAxBf,SAAuBC,GACrBN,EAAcM,EAAEC,OAAOC,QAuBcC,KAAK,OAAOC,YAAaX,EAAYY,KAAK,MAAMH,MAAOT,MAExF,eAAC,EAAD,WACE,cAAC,EAAD,CAAUa,QAhBlB,WACEhB,aAAaiB,WAAW,OACxBC,OAAOC,SAASC,UAcV,SAAiC,cAAC,IAAD,CAAiBC,KAAMC,QACxD,cAAC,EAAD,CAAUN,QAxBlB,WACKb,IACDH,aAAauB,QAAQ,MAAOpB,GAC5Be,OAAOC,SAASC,WAqBqBxB,SAAO,EAAxC,SAAyC,cAAC,IAAD,CAAiByB,KAAMG,kB,MChC3DC,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad9c5f83.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst color = {\n  black: '#2d3436',\n  white: '#fff'\n}\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 15px 0;\n    background-color: ${color.white};\n    color: ${color.black};\n\n    h1 {\n      font-size: 20px;\n      font-weight: 500;\n    }\n`\n\nexport const Container = styled.div`\n  display: block;\n  text-align: center;\n\n  @media(min-width: 800px) {\n    padding: 0 12%;\n  }\n`\n\nexport const ButtonGrouper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  button {\n    margin: 0 5px;\n  }\n`\n\nexport const Button = styled.button`\n  background: ${({ primary }) => primary ? color.black : color.white};\n  color: ${({ primary }) => primary ? color.white : color.black};\n  border-radius: 50% 50%;\n  border: 2px solid #2d3436;\n  padding: 10px;\n  font-size: 10px;\n  cursor: pointer;\n`\n\nexport const FormField = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0 30px;\n\n  input {\n    border: 0;\n    padding: 2px 5px;\n    border-bottom: 2px solid ${color.black};\n    font-size: 14px;\n    outline: 0;\n    max-width: 100vw;\n    width: 260px;\n    text-align: center;\n  }\n`\n","import { useState } from 'react'\n\nimport * as S  from './styles'\n\nimport ReactPlayer from 'react-player'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedoAlt, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nfunction Home () {\n  const url = localStorage.getItem('url') || \"https://bstage.org:8443/live/chics.flv\"\n  const [inputValue, setInputValue] = useState(url)\n\n  function handleChange (e) {\n    setInputValue(e.target.value)\n  }\n\n  function handleSubmit () {\n    if(inputValue) {\n      localStorage.setItem('url', inputValue)\n      window.location.reload()\n    }\n  }\n\n  function resetStorage () {\n    localStorage.removeItem('url')\n    window.location.reload()\n  }\n\n  return (\n    <>\n      <S.Header>\n        <h1>ShareChics</h1>\n      </S.Header>\n      <S.Container>\n        <ReactPlayer url={url} playing={false} width=\"1920\" height=\"1080\" controls/>\n        <S.FormField>\n          <input onChange={handleChange} type=\"text\" placeholder={inputValue} name=\"url\" value={inputValue} />\n        </S.FormField>\n        <S.ButtonGrouper>\n          <S.Button onClick={resetStorage}><FontAwesomeIcon icon={faRedoAlt} /></S.Button>\n          <S.Button onClick={handleSubmit} primary><FontAwesomeIcon icon={faCheck} /></S.Button>\n        </S.ButtonGrouper>\n      </S.Container>\n    </>\n  )\n}\n\nexport default Home\n","import Home from './containers/home'\nimport './global.css'\n\n\nfunction App() {\n  return <Home />\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}